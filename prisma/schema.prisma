generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CardType {
  id        Int       @id @default(autoincrement())
  name      String
  createdAT DateTime? @default(now()) @db.Timestamp(6)
  cards     Card[]

  @@map("cardTypes")
}

model Card {
  id           Int       @id @default(autoincrement())
  userId       Int
  label        String    @unique
  number       String    @unique
  name         String
  cvv          String
  expiringDate String
  password     String
  isVirtual    Boolean   @default(false)
  typeId       Int
  createdAT    DateTime? @default(now()) @db.Timestamp(6)
  cardType     CardType  @relation(fields: [typeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users        User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("cards")
}

model Credential {
  id        Int       @id @default(autoincrement())
  userId    Int
  label     String    @unique
  url       String
  userName  String
  password  String
  createdAT DateTime? @default(now()) @db.Timestamp(6)
  users     User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("credentials")
}

model SafeNote {
  id        Int       @id @default(autoincrement())
  userId    Int
  label     String    @unique
  note      String
  createdAT DateTime? @default(now()) @db.Timestamp(6)
  users     User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("safeNotes")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  createdAT   DateTime?     @default(now()) @db.Timestamp(6)
  cards       Card[]
  credentials Credential[]
  safeNotes   SafeNote[]
  wifi        Wifi[]

  @@map("users")
}

model Wifi {
  id        Int       @id @default(autoincrement())
  userId    Int
  label     String    @unique
  name      String
  password  String
  createdAT DateTime? @default(now()) @db.Timestamp(6)
  users     User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("wifi")
}
